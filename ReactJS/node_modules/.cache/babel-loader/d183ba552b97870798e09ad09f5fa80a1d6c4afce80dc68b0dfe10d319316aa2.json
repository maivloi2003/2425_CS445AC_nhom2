{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({});\n  var setErrorRules = {};\n  const validateField = (fieldName, value, formData) => {\n    const rule = options.rules.find(rule => rule.selector === fieldName);\n    var allRule = setErrorRules[rule.selector];\n    for (var i = 0; i < allRule.length; i++) {\n      e;\n    }\n    if (rule) {\n      const errorMessage = rule.test(value, formData);\n      setErrors(prev => ({\n        ...prev,\n        [fieldName]: errorMessage\n      }));\n    }\n  };\n  const clearError = fieldName => {\n    setErrors(prev => ({\n      ...prev,\n      [fieldName]: undefined\n    }));\n  };\n  const validateAll = formData => {\n    const newErrors = {};\n    options.rules.forEach(rule => {\n      const value = formData[rule.selector];\n      const errorMessage = rule.test(value, formData);\n      if (errorMessage) {\n        newErrors[rule.selector] = errorMessage;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nuseValidator.isRequired = selector => {\n  return {\n    selector,\n    test: value => {\n      return value && value.trim() ? undefined : 'Trường này là bắt buộc';\n    }\n  };\n};\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\n  return {\n    selector,\n    test: (value, formData) => {\n      return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\n    }\n  };\n};\nuseValidator.minLength = (selector, minLength) => {\n  return {\n    selector,\n    test: value => {\n      return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\n    }\n  };\n};\nuseValidator.isEmail = selector => {\n  return {\n    selector,\n    test: value => {\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return regex.test(value) ? undefined : 'Email không hợp lệ';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useValidator","options","_s","errors","setErrors","setErrorRules","validateField","fieldName","value","formData","rule","rules","find","selector","allRule","i","length","e","errorMessage","test","prev","clearError","undefined","validateAll","newErrors","forEach","Object","keys","isRequired","trim","isPasswordMatch","compareSelector","minLength","isEmail","regex"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({});\r\n\r\n    var setErrorRules = {}\r\n\r\n    const validateField = (fieldName, value, formData) => {\r\n        const rule = options.rules.find((rule) => rule.selector === fieldName);\r\n        var allRule = setErrorRules[rule.selector]\r\n        for (var i = 0 ; i < allRule.length ; i++){\r\n            e\r\n        }\r\n        if (rule) {\r\n            const errorMessage = rule.test(value, formData);\r\n            setErrors((prev) => ({\r\n                ...prev,\r\n                [fieldName]: errorMessage,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const clearError = (fieldName) => {\r\n        setErrors((prev) => ({\r\n            ...prev,\r\n            [fieldName]: undefined,\r\n        }));\r\n    };\r\n\r\n    const validateAll = (formData) => {\r\n        const newErrors = {};\r\n        options.rules.forEach((rule) => {\r\n            const value = formData[rule.selector];\r\n            const errorMessage = rule.test(value, formData);\r\n            if (errorMessage) {\r\n                newErrors[rule.selector] = errorMessage;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\nuseValidator.isRequired = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value && value.trim() ? undefined : 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\r\n    return {\r\n        selector,\r\n        test: (value, formData) => {\r\n            return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.minLength = (selector, minLength) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isEmail = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            return regex.test(value) ? undefined : 'Email không hợp lệ';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}