{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const ruleMap = options.rules.reduce((map, rule) => {\n    if (!map[rule.selector]) {\n      map[rule.selector] = [];\n    }\n    map[rule.selector].push(rule);\n    return map;\n  }, {});\n  const validateField = useCallback((fieldName, formData) => {\n    const rules = ruleMap[fieldName] || [];\n    rules.some(rule => {\n      const message = rule.test(formData[fieldName], formData);\n      if (message) {\n        setErrors(prev => ({\n          ...prev,\n          [fieldName]: message\n        }));\n        return true;\n      }\n      return false;\n    });\n  }, [ruleMap]);\n  const clearError = useCallback(fieldName => {\n    setErrors(prev => {\n      const {\n        [fieldName]: _,\n        ...rest\n      } = prev;\n      return rest;\n    });\n  }, []);\n  const validateAll = useCallback(formData => {\n    const newErrors = {};\n    options.rules.forEach(rule => {\n      const message = rule.test(formData[rule.selector], formData);\n      if (message && !newErrors[rule.selector]) {\n        newErrors[rule.selector] = message;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [options.rules]);\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"2QXNPQhgUMFP6LpiBemIlipw+6k=\");\nuseValidator.isRequired = (selector, message) => {\n  return {\n    selector,\n    test: value => {\n      return value.trim() ? undefined : message || 'Trường này là bắt buộc';\n    }\n  };\n};\nuseValidator.isPasswordMatch = (selector, compareSelector, message) => {\n  return {\n    selector,\n    test: (value, formData) => {\n      return value !== formData[compareSelector] ? message || 'Mật khẩu không khớp' : undefined;\n    }\n  };\n};\nuseValidator.minLength = (selector, minLength, message) => {\n  return {\n    selector,\n    test: value => {\n      return value.length >= minLength ? undefined : message || `Mật khẩu phải có ít nhất ${minLength} ký tự`;\n    }\n  };\n};\nuseValidator.isEmail = (selector, message) => {\n  return {\n    selector,\n    test: value => {\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return regex.test(value) ? undefined : 'Email không hợp lệ';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useCallback","useValidator","options","_s","errors","setErrors","ruleMap","rules","reduce","map","rule","selector","push","validateField","fieldName","formData","some","message","test","prev","clearError","_","rest","validateAll","newErrors","forEach","Object","keys","length","isRequired","value","trim","undefined","isPasswordMatch","compareSelector","minLength","isEmail","regex"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const ruleMap = options.rules.reduce((map, rule) => {\r\n        if (!map[rule.selector]) {\r\n            map[rule.selector] = [];\r\n        }\r\n        map[rule.selector].push(rule);\r\n        return map;\r\n    }, {});\r\n\r\n    const validateField = useCallback((fieldName, formData) => {\r\n        const rules = ruleMap[fieldName] || [];\r\n        rules.some((rule) => {\r\n            const message = rule.test(formData[fieldName], formData);\r\n            if (message) {\r\n                setErrors((prev) => ({\r\n                    ...prev,\r\n                    [fieldName]: message,\r\n                }));\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }, [ruleMap]);\r\n\r\n    const clearError = useCallback(fieldName => {\r\n        setErrors((prev) => {\r\n            const { [fieldName]: _, ...rest } = prev;\r\n            return rest;\r\n        });\r\n    }, []);\r\n\r\n    const validateAll = useCallback((formData) => {\r\n        const newErrors = {};\r\n        options.rules.forEach((rule) => {\r\n            const message = rule.test(formData[rule.selector], formData);\r\n            if (message && !newErrors[rule.selector]) {\r\n                newErrors[rule.selector] = message;\r\n            }\r\n        });\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    }, [options.rules]);\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\n\r\nuseValidator.isRequired = (selector, message) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.trim() ? undefined : message || 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isPasswordMatch = (selector, compareSelector, message) => {\r\n    return {\r\n        selector,\r\n        test: (value, formData) => {\r\n            return value !== formData[compareSelector] ? message || 'Mật khẩu không khớp' : undefined;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.minLength = (selector, minLength, message) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.length >= minLength ? undefined : message || `Mật khẩu phải có ít nhất ${minLength} ký tự`;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isEmail = (selector, message) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            return regex.test(value) ? undefined : 'Email không hợp lệ';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}