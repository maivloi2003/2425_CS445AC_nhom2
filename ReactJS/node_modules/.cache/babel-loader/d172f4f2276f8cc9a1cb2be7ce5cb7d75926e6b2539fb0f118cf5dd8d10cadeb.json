{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const validateField = (fieldName, formData) => {\n    const rule = options.rules.filter(rule => rule.selector === fieldName);\n    for (var i = 0; i < rule.length; i++) {\n      let message = rule[i].test(formData[fieldName], formData);\n      if (message) {\n        setErrors(prev => ({\n          ...prev,\n          [fieldName]: message\n        }));\n        break;\n      }\n    }\n  };\n  const clearError = fieldName => {\n    setErrors(prev => {\n      const {\n        [fieldName]: _,\n        ...rest\n      } = prev; // Loại bỏ fieldName\n      return rest;\n    });\n  };\n  const validateAll = formData => {\n    const newErrors = {};\n    for (var i = 0; i < options.rules.length; i++) {\n      let message = options.rules[i].test(formData[options.rules[i].selector], formData);\n      if (message) {\n        if (!Object.keys(newErrors).some(key => key === options.rules[i].selector)) {\n          newErrors[options.rules[i].selector] = message;\n        }\n      }\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nuseValidator.isRequired = selector => {\n  return {\n    selector,\n    test: value => {\n      return value.trim() ? undefined : 'Trường này là bắt buộc';\n    }\n  };\n};\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\n  return {\n    selector,\n    test: (value, formData) => {\n      return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\n    }\n  };\n};\nuseValidator.minLength = (selector, minLength) => {\n  return {\n    selector,\n    test: value => {\n      return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\n    }\n  };\n};\nuseValidator.isEmail = selector => {\n  return {\n    selector,\n    test: value => {\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return regex.test(value) ? undefined : 'Email không hợp lệ';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useValidator","options","_s","errors","setErrors","validateField","fieldName","formData","rule","rules","filter","selector","i","length","message","test","prev","clearError","_","rest","validateAll","newErrors","Object","keys","some","key","isRequired","value","trim","undefined","isPasswordMatch","compareSelector","minLength","isEmail","regex"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const validateField = (fieldName, formData) => {\r\n        const rule = options.rules.filter((rule) => rule.selector === fieldName);\r\n        for (var i = 0; i < rule.length; i++) {\r\n            let message = rule[i].test(formData[fieldName], formData);\r\n            if (message) {\r\n                setErrors(prev => ({\r\n                    ...prev,\r\n                    [fieldName]: message\r\n                }))\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    const clearError = (fieldName) => {\r\n        setErrors((prev) => {\r\n            const { [fieldName]: _, ...rest } = prev; // Loại bỏ fieldName\r\n            return rest;\r\n        });\r\n    };\r\n\r\n    const validateAll = (formData) => {\r\n        const newErrors = {};\r\n        for (var i = 0; i < options.rules.length; i++) {\r\n            let message = options.rules[i].test(formData[options.rules[i].selector], formData);\r\n            if (message) {\r\n                if (!Object.keys(newErrors).some(key => (key === options.rules[i].selector))) {\r\n                    newErrors[options.rules[i].selector] = message\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\nuseValidator.isRequired = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.trim() ? undefined : 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\r\n    return {\r\n        selector,\r\n        test: (value, formData) => {\r\n            return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.minLength = (selector, minLength) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isEmail = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            return regex.test(value) ? undefined : 'Email không hợp lệ';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}