{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({});\n  v;\n  const clearError = fieldName => {\n    setErrors(prev => ({\n      ...prev,\n      [fieldName]: undefined\n    }));\n  };\n  const validateAll = formData => {\n    const newErrors = {};\n    options.rules.forEach(rule => {\n      const value = formData[rule.selector];\n      const errorMessage = rule.test(value, formData);\n      if (errorMessage) {\n        newErrors[rule.selector] = errorMessage;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nuseValidator.isRequired = selector => {\n  return {\n    selector,\n    test: value => {\n      return value && value.trim() ? undefined : 'Trường này là bắt buộc';\n    }\n  };\n};\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\n  return {\n    selector,\n    test: (value, formData) => {\n      return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\n    }\n  };\n};\nuseValidator.minLength = (selector, minLength) => {\n  return {\n    selector,\n    test: value => {\n      return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\n    }\n  };\n};\nuseValidator.isEmail = selector => {\n  return {\n    selector,\n    test: value => {\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return regex.test(value) ? undefined : 'Email không hợp lệ';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useValidator","options","_s","errors","setErrors","v","clearError","fieldName","prev","undefined","validateAll","formData","newErrors","rules","forEach","rule","value","selector","errorMessage","test","Object","keys","length","validateField","isRequired","trim","isPasswordMatch","compareSelector","minLength","isEmail","regex"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({});\r\n\r\n    v\r\n\r\n    const clearError = (fieldName) => {\r\n        setErrors((prev) => ({\r\n            ...prev,\r\n            [fieldName]: undefined,\r\n        }));\r\n    };\r\n\r\n    const validateAll = (formData) => {\r\n        const newErrors = {};\r\n        options.rules.forEach((rule) => {\r\n            const value = formData[rule.selector];\r\n            const errorMessage = rule.test(value, formData);\r\n            if (errorMessage) {\r\n                newErrors[rule.selector] = errorMessage;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\nuseValidator.isRequired = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value && value.trim() ? undefined : 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\r\n    return {\r\n        selector,\r\n        test: (value, formData) => {\r\n            return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.minLength = (selector, minLength) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isEmail = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            return regex.test(value) ? undefined : 'Email không hợp lệ';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,YAAY,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExCM,CAAC;EAED,MAAMC,UAAU,GAAIC,SAAS,IAAK;IAC9BH,SAAS,CAAEI,IAAI,KAAM;MACjB,GAAGA,IAAI;MACP,CAACD,SAAS,GAAGE;IACjB,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAC9B,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpBX,OAAO,CAACY,KAAK,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC5B,MAAMC,KAAK,GAAGL,QAAQ,CAACI,IAAI,CAACE,QAAQ,CAAC;MACrC,MAAMC,YAAY,GAAGH,IAAI,CAACI,IAAI,CAACH,KAAK,EAAEL,QAAQ,CAAC;MAC/C,IAAIO,YAAY,EAAE;QACdN,SAAS,CAACG,IAAI,CAACE,QAAQ,CAAC,GAAGC,YAAY;MAC3C;IACJ,CAAC,CAAC;IAEFd,SAAS,CAACQ,SAAS,CAAC;IACpB,OAAOQ,MAAM,CAACC,IAAI,CAACT,SAAS,CAAC,CAACU,MAAM,KAAK,CAAC;EAC9C,CAAC;EAED,OAAO;IACHnB,MAAM;IACNoB,aAAa;IACbjB,UAAU;IACVI;EACJ,CAAC;AACL,CAAC;AAACR,EAAA,CAhCIF,YAAY;AAkClBA,YAAY,CAACwB,UAAU,GAAIP,QAAQ,IAAK;EACpC,OAAO;IACHA,QAAQ;IACRE,IAAI,EAAGH,KAAK,IAAK;MACb,OAAOA,KAAK,IAAIA,KAAK,CAACS,IAAI,CAAC,CAAC,GAAGhB,SAAS,GAAG,wBAAwB;IACvE;EACJ,CAAC;AACL,CAAC;AAEDT,YAAY,CAAC0B,eAAe,GAAG,CAACT,QAAQ,EAAEU,eAAe,KAAK;EAC1D,OAAO;IACHV,QAAQ;IACRE,IAAI,EAAEA,CAACH,KAAK,EAAEL,QAAQ,KAAK;MACvB,OAAOK,KAAK,KAAKL,QAAQ,CAACgB,eAAe,CAAC,GAAG,qBAAqB,GAAGlB,SAAS;IAClF;EACJ,CAAC;AACL,CAAC;AAEDT,YAAY,CAAC4B,SAAS,GAAG,CAACX,QAAQ,EAAEW,SAAS,KAAK;EAC9C,OAAO;IACHX,QAAQ;IACRE,IAAI,EAAGH,KAAK,IAAK;MACb,OAAOA,KAAK,CAACM,MAAM,IAAIM,SAAS,GAAGnB,SAAS,GAAG,4BAA4BmB,SAAS,QAAQ;IAChG;EACJ,CAAC;AACL,CAAC;AAED5B,YAAY,CAAC6B,OAAO,GAAIZ,QAAQ,IAAK;EACjC,OAAO;IACHA,QAAQ;IACRE,IAAI,EAAGH,KAAK,IAAK;MACb,MAAMc,KAAK,GAAG,kDAAkD;MAChE,OAAOA,KAAK,CAACX,IAAI,CAACH,KAAK,CAAC,GAAGP,SAAS,GAAG,oBAAoB;IAC/D;EACJ,CAAC;AACL,CAAC;AAED,eAAeT,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}