{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({});\n  const ruleMap = options.rules.reduce((map, rule) => {\n    if (!map[rule.selector]) {\n      map[rule.selector] = [];\n    }\n    map[rule.selector].push(rule);\n    return map;\n  }, {});\n  const validateField = useCallback;\n  const clearError = fieldName => {\n    setErrors(prev => {\n      const {\n        [fieldName]: _,\n        ...rest\n      } = prev;\n      return rest;\n    });\n  };\n  const validateAll = formData => {\n    const newErrors = {};\n    options.rules.forEach(rule => {\n      const message = rule.test(formData[rule.selector], formData);\n      if (message && !newErrors[rule.selector]) {\n        newErrors[rule.selector] = message;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nuseValidator.isRequired = selector => {\n  return {\n    selector,\n    test: value => {\n      return value.trim() ? undefined : 'Trường này là bắt buộc';\n    }\n  };\n};\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\n  return {\n    selector,\n    test: (value, formData) => {\n      return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\n    }\n  };\n};\nuseValidator.minLength = (selector, minLength) => {\n  return {\n    selector,\n    test: value => {\n      return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\n    }\n  };\n};\nuseValidator.isEmail = selector => {\n  return {\n    selector,\n    test: value => {\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return regex.test(value) ? undefined : 'Email không hợp lệ';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useCallback","useValidator","options","_s","errors","setErrors","ruleMap","rules","reduce","map","rule","selector","push","validateField","clearError","fieldName","prev","_","rest","validateAll","formData","newErrors","forEach","message","test","Object","keys","length","isRequired","value","trim","undefined","isPasswordMatch","compareSelector","minLength","isEmail","regex"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const ruleMap = options.rules.reduce((map, rule) => {\r\n        if (!map[rule.selector]) {\r\n            map[rule.selector] = [];\r\n        }\r\n        map[rule.selector].push(rule);\r\n        return map;\r\n    }, {});\r\n\r\n    const validateField = useCallback\r\n\r\n    const clearError = (fieldName) => {\r\n        setErrors((prev) => {\r\n            const { [fieldName]: _, ...rest } = prev;\r\n            return rest;\r\n        });\r\n    };\r\n\r\n    const validateAll = (formData) => {\r\n        const newErrors = {};\r\n        options.rules.forEach((rule) => {\r\n            const message = rule.test(formData[rule.selector], formData);\r\n            if (message && !newErrors[rule.selector]) {\r\n                newErrors[rule.selector] = message;\r\n            }\r\n        });\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\n\r\nuseValidator.isRequired = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.trim() ? undefined : 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\r\n    return {\r\n        selector,\r\n        test: (value, formData) => {\r\n            return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.minLength = (selector, minLength) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isEmail = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            return regex.test(value) ? undefined : 'Email không hợp lệ';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}