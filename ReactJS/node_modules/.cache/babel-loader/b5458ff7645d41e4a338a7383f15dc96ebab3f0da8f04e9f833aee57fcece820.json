{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({});\n  var errorMessage = {};\n  const validateField = (fieldName, value, formData) => {\n    const rule = options.rules.filter(rule => rule.selector === fieldName);\n    if (rule) {\n      rule.map((item, index) => {\n        e;\n      });\n      setErrors(prev => ({\n        ...prev,\n        [fieldName]: errorMessage\n      }));\n    }\n  };\n  const clearError = fieldName => {\n    setErrors(prev => ({\n      ...prev,\n      [fieldName]: undefined\n    }));\n  };\n  const validateAll = formData => {\n    const newErrors = {};\n    options.rules.forEach(rule => {\n      const value = formData[rule.selector];\n      const errorMessage = rule.test(value, formData);\n      if (errorMessage) {\n        newErrors[rule.selector] = errorMessage;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nuseValidator.isRequired = selector => {\n  return {\n    selector,\n    test: value => {\n      return value.trim() ? undefined : 'Trường này là bắt buộc';\n    }\n  };\n};\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\n  return {\n    selector,\n    test: (value, formData) => {\n      return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\n    }\n  };\n};\nuseValidator.minLength = (selector, minLength) => {\n  return {\n    selector,\n    test: value => {\n      return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\n    }\n  };\n};\nuseValidator.isEmail = selector => {\n  return {\n    selector,\n    test: value => {\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      return regex.test(value) ? undefined : 'Email không hợp lệ';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useValidator","options","_s","errors","setErrors","errorMessage","validateField","fieldName","value","formData","rule","rules","filter","selector","map","item","index","e","prev","clearError","undefined","validateAll","newErrors","forEach","test","Object","keys","length","isRequired","trim","isPasswordMatch","compareSelector","minLength","isEmail","regex"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({});\r\n    var errorMessage = {};\r\n\r\n    const validateField = (fieldName, value, formData) => {\r\n        const rule = options.rules.filter((rule) => rule.selector === fieldName);\r\n        if (rule) {\r\n            rule.map((item,index) => {\r\n                e\r\n            })\r\n            setErrors((prev) => ({\r\n                ...prev,\r\n                [fieldName]: errorMessage,\r\n            }));\r\n        }\r\n    };\r\n\r\n    const clearError = (fieldName) => {\r\n        setErrors((prev) => ({\r\n            ...prev,\r\n            [fieldName]: undefined,\r\n        }));\r\n    };\r\n\r\n    const validateAll = (formData) => {\r\n        const newErrors = {};\r\n        options.rules.forEach((rule) => {\r\n            const value = formData[rule.selector];\r\n            const errorMessage = rule.test(value, formData);\r\n            if (errorMessage) {\r\n                newErrors[rule.selector] = errorMessage;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    };\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\nuseValidator.isRequired = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.trim() ? undefined : 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isPasswordMatch = (selector, compareSelector) => {\r\n    return {\r\n        selector,\r\n        test: (value, formData) => {\r\n            return value !== formData[compareSelector] ? 'Mật khẩu không khớp' : undefined;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.minLength = (selector, minLength) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            return value.length >= minLength ? undefined : `Mật khẩu phải có ít nhất ${minLength} ký tự`;\r\n        },\r\n    };\r\n};\r\n\r\nuseValidator.isEmail = (selector) => {\r\n    return {\r\n        selector,\r\n        test: (value) => {\r\n            const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n            return regex.test(value) ? undefined : 'Email không hợp lệ';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}