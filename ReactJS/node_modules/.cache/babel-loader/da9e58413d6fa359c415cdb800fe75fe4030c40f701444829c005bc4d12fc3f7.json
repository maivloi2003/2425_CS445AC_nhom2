{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nconst useValidator = options => {\n  _s();\n  const [errors, setErrors] = useState({}); // Lưu trạng thái lỗi cho các trường\n\n  const validateField = (fieldName, value) => {\n    const rule = options.rules.find(rule => rule.selector === fieldName);\n    if (rule) {\n      const errorMessage = rule.rules(value); // Gọi hàm kiểm tra\n      setErrors(prev => ({\n        ...prev,\n        [fieldName]: errorMessage // Cập nhật lỗi cho trường\n      }));\n      console.log(errors);\n    }\n  };\n  const clearError = fieldName => {\n    setErrors(prev => ({\n      ...prev,\n      [fieldName]: undefined // Xóa lỗi khi cần\n    }));\n  };\n  const validateAll = formData => {\n    const newErrors = {};\n    options.rules.forEach(rule => {\n      const value = formData[rule.selector];\n      const errorMessage = rule.rules(value);\n      if (errorMessage) {\n        newErrors[rule.selector] = errorMessage;\n      }\n    });\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0; // Trả về true nếu không có lỗi\n  };\n  return {\n    errors,\n    validateField,\n    clearError,\n    validateAll\n  };\n};\n_s(useValidator, \"o+SUXTQUSJNurFcpxixiLrA9BM0=\");\nuseValidator.isRequired = selector => {\n  return {\n    selector,\n    rules: value => {\n      return value.trim() ? undefined : 'Trường này là bắt buộc';\n    }\n  };\n};\nexport default useValidator;","map":{"version":3,"names":["useState","useValidator","options","_s","errors","setErrors","validateField","fieldName","value","rule","rules","find","selector","errorMessage","prev","console","log","clearError","undefined","validateAll","formData","newErrors","forEach","Object","keys","length","isRequired","trim"],"sources":["D:/ReactJs/forum/src/hooks/useValidator.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst useValidator = (options) => {\r\n    const [errors, setErrors] = useState({}); // Lưu trạng thái lỗi cho các trường\r\n\r\n    const validateField = (fieldName, value) => {\r\n        const rule = options.rules.find((rule) => rule.selector === fieldName);\r\n        if (rule) {\r\n            const errorMessage = rule.rules(value); // Gọi hàm kiểm tra\r\n            setErrors((prev) => ({\r\n                ...prev,\r\n                [fieldName]: errorMessage, // Cập nhật lỗi cho trường\r\n            }));\r\n            console.log(errors);\r\n\r\n        }\r\n    };\r\n\r\n    const clearError = (fieldName) => {\r\n        setErrors((prev) => ({\r\n            ...prev,\r\n            [fieldName]: undefined, // Xóa lỗi khi cần\r\n        }));\r\n    };\r\n\r\n    const validateAll = (formData) => {\r\n        const newErrors = {};\r\n        options.rules.forEach((rule) => {\r\n            const value = formData[rule.selector];\r\n            const errorMessage = rule.rules(value);\r\n            if (errorMessage) {\r\n                newErrors[rule.selector] = errorMessage;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0; // Trả về true nếu không có lỗi\r\n    };\r\n\r\n    return {\r\n        errors,\r\n        validateField,\r\n        clearError,\r\n        validateAll,\r\n    };\r\n};\r\n\r\nuseValidator.isRequired = (selector) => {\r\n    return {\r\n        selector,\r\n        rules: (value) => {\r\n            return value.trim() ? undefined : 'Trường này là bắt buộc';\r\n        },\r\n    };\r\n};\r\n\r\nexport default useValidator;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,YAAY,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1C,MAAMM,aAAa,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAK;IACxC,MAAMC,IAAI,GAAGP,OAAO,CAACQ,KAAK,CAACC,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAACG,QAAQ,KAAKL,SAAS,CAAC;IACtE,IAAIE,IAAI,EAAE;MACN,MAAMI,YAAY,GAAGJ,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,CAAC,CAAC;MACxCH,SAAS,CAAES,IAAI,KAAM;QACjB,GAAGA,IAAI;QACP,CAACP,SAAS,GAAGM,YAAY,CAAE;MAC/B,CAAC,CAAC,CAAC;MACHE,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;IAEvB;EACJ,CAAC;EAED,MAAMa,UAAU,GAAIV,SAAS,IAAK;IAC9BF,SAAS,CAAES,IAAI,KAAM;MACjB,GAAGA,IAAI;MACP,CAACP,SAAS,GAAGW,SAAS,CAAE;IAC5B,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMC,WAAW,GAAIC,QAAQ,IAAK;IAC9B,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpBnB,OAAO,CAACQ,KAAK,CAACY,OAAO,CAAEb,IAAI,IAAK;MAC5B,MAAMD,KAAK,GAAGY,QAAQ,CAACX,IAAI,CAACG,QAAQ,CAAC;MACrC,MAAMC,YAAY,GAAGJ,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;MACtC,IAAIK,YAAY,EAAE;QACdQ,SAAS,CAACZ,IAAI,CAACG,QAAQ,CAAC,GAAGC,YAAY;MAC3C;IACJ,CAAC,CAAC;IAEFR,SAAS,CAACgB,SAAS,CAAC;IACpB,OAAOE,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,MAAM,KAAK,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,OAAO;IACHrB,MAAM;IACNE,aAAa;IACbW,UAAU;IACVE;EACJ,CAAC;AACL,CAAC;AAAChB,EAAA,CA3CIF,YAAY;AA6ClBA,YAAY,CAACyB,UAAU,GAAId,QAAQ,IAAK;EACpC,OAAO;IACHA,QAAQ;IACRF,KAAK,EAAGF,KAAK,IAAK;MACd,OAAOA,KAAK,CAACmB,IAAI,CAAC,CAAC,GAAGT,SAAS,GAAG,wBAAwB;IAC9D;EACJ,CAAC;AACL,CAAC;AAED,eAAejB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}