{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJs\\\\forum\\\\src\\\\App.js\";\nimport { Fragment } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { publicRoutes, privateRoutes } from \"./routes\";\nimport { DefaultLayout } from \"./components/Layouts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst token = !!localStorage.getItem('authToken');\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [publicRoutes.map((route, index) => {\n          const Page = route.component;\n          let Layout = DefaultLayout;\n          if (route.layout) {\n            Layout = route.layout;\n          } else if (route.layout === null) {\n            Layout = Fragment;\n          }\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            element: /*#__PURE__*/_jsxDEV(Layout, {\n              children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 29\n          }, this);\n        }), privateRoutes.map((route, index) => {\n          const Page = route.component;\n          let Layout = DefaultLayout;\n          if (route.layout) {\n            Layout = route.layout;\n          } else if (route.layout === null) {\n            Layout = Fragment;\n          }\n          retrun(/*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            element: token ? /*#__PURE__*/_jsxDEV(Layout, {\n              children: /*#__PURE__*/_jsxDEV(Page, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/login\",\n              replace: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 41\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this));\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","BrowserRouter","Router","Routes","Route","Navigate","publicRoutes","privateRoutes","DefaultLayout","jsxDEV","_jsxDEV","token","localStorage","getItem","App","children","className","map","route","index","Page","component","Layout","layout","path","element","fileName","_jsxFileName","lineNumber","columnNumber","retrun","to","replace","_c","$RefreshReg$"],"sources":["D:/ReactJs/forum/src/App.js"],"sourcesContent":["import { Fragment } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { publicRoutes, privateRoutes } from '~/routes';\r\nimport { DefaultLayout } from '~/components/Layouts';\r\n\r\nconst token = !!localStorage.getItem('authToken')\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    {publicRoutes.map((route, index) => {\r\n                        const Page = route.component;\r\n\r\n                        let Layout = DefaultLayout;\r\n\r\n                        if (route.layout) {\r\n                            Layout = route.layout;\r\n                        } else if (route.layout === null) {\r\n                            Layout = Fragment;\r\n                        }\r\n\r\n                        return (\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                element={\r\n                                    <Layout>\r\n                                        <Page />\r\n                                    </Layout>\r\n                                }\r\n                            />\r\n                        );\r\n                    })}\r\n\r\n                    {privateRoutes.map((route, index) => {\r\n                        const Page = route.component;\r\n\r\n                        let Layout = DefaultLayout;\r\n                        if (route.layout) {\r\n                            Layout = route.layout\r\n                        } else if (route.layout === null) {\r\n                            Layout = Fragment\r\n                        }\r\n\r\n                        retrun(\r\n                            <Route\r\n                                key={index}\r\n                                path={route.path}\r\n                                element={\r\n                                    token ? (\r\n                                        <Layout>\r\n                                            <Page />\r\n                                        </Layout>\r\n                                    ) : (\r\n                                        <Navigate to=\"/login\" replace />\r\n                                    )\r\n                                }\r\n                            />\r\n                        )\r\n                    })}\r\n                </Routes>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}